# network.py
#
# Функции для работы с нейронной сетью
from math import exp


def forwards(li, w, lo):
    """
    Прямое прохождение между двумя слоями нейронной сети.
    Каждый слой представлен массивом с выходными значениями нейронов в перовм столбце
    L = [[n1, n2, n3, ...],
         [...]]
    Коэфициенты весов представленны в виде двумерного массива, где по столбцам нейроны входного слоя, по строчкам -
    выходного.
    W = [[w11, w21, w31, ..., wn1],
         [w12, w22, w32, ..., wn2],
         [.......................],
         [w1m, w2m, w3m, ..., 2nm]], где n - количество нейронов входного слоя, m - выходного.
    :param li: Входной слой
    :param w: Коэфициенты весов
    :param lo: Выходной слой
    """
    # Количество строк (Нейронов в выходном слое)
    ht = w.shape[0]
    # Количество столбцов (Нейронов в входном слое)
    wt = w.shape[1]

    for y in range(ht):
        lo[0, y] = 0
        # Проход по выходным нейронам
        for x in range(wt):
            # Проход по входным нейронам
            lo[0, y] += li[0, x] * w[y, x]
        lo[0, y] = 1 / (1 + exp(-1 * lo[0, y]))


def find_error(li, w, lo):
    """
    Поиск ошибки нейрона.
    Каждый слой представлен массивом с  выходными значениями нейронов в перовм столбце, и ошибки во втором столбце
    L = [[n1, n2, n3, ...],
         [e1, e2, e3, ...]]
    Коэфициенты весов представленны в виде двумерного массива, где по столбцам нейроны входного слоя, по строчкам -
    выходного.
    W = [[w11, w21, w31, ..., wn1],
         [w12, w22, w32, ..., wn2],
         [.......................],
         [w1m, w2m, w3m, ..., 2nm]], где n - количество нейронов входного слоя, m - выходного.
    :param li: Входной слой
    :param w: Коэфициенты весов
    :param lo: Выходной слой
    """
    # Количество строк (Нейронов в выходном слое)
    ht = w.shape[0]
    # Количество столбцов (Нейронов в входном слое)
    wt = w.shape[1]

    for x in range(wt):
        li[1, x] = 0
        # Проход по выходным нейронам
        for y in range(ht):
            # Проход по входным нейронам
            li[1, x] += lo[1, y] * w[y, x]
        li[1, x] *= li[0, x] * (1 - li(0, x))


def backwards(li, w, lo, k):
    """
    Исправление весов, на основе ошибки.
    Каждый слой представлен массивом с  выходными значениями нейронов в перовм столбце, и ошибки во втором столбце
    L = [[n1, n2, n3, ...],
         [e1, e2, e3, ...]]
    Коэфициенты весов представленны в виде двумерного массива, где по столбцам нейроны входного слоя, по строчкам -
    выходного.
    W = [[w11, w21, w31, ..., wn1],
         [w12, w22, w32, ..., wn2],
         [.......................],
         [w1m, w2m, w3m, ..., 2nm]], где n - количество нейронов входного слоя, m - выходного.
    :param li: Входной слой
    :param w: Коэфициенты весов
    :param lo: Выходной слой
    :param k: Коэфициент обучения
    """
    # Количество строк (Нейронов в выходном слое)
    ht = w.shape[0]
    # Количество столбцов (Нейронов в входном слое)
    wt = w.shape[1]

    for y in range(ht):
        # Проход по выходным нейронам
        for x in range(wt):
            # Проход по входным нейронам
            w[y, x] += k * lo[1, y] * li[0, x]
